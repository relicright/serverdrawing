<mxfile host="app.diagrams.net" modified="2020-04-27T21:39:13.301Z" agent="5.0 (Windows)" etag="YoILu9uOw-oVWKwQqMVE" version="12.9.8" type="github">
  <diagram id="lD6KHarhcCYwHScnSqFV" name="Page-1">
    <mxGraphModel dx="876" dy="1772" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ufBeylbA63SAaLsGzbN_-1" value="&lt;font style=&quot;font-size: 25px&quot;&gt;LOG SQL FUNCTIONS&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="10" y="-200" width="770" height="2380" as="geometry" />
        </mxCell>
        <mxCell id="ufBeylbA63SAaLsGzbN_-2" value="&lt;div&gt;ADD LOG TO SQL DATABASE&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;func AddLogToSQLDatabasse ( l Log ) error { }&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Adds a log into the &#39;Logs&#39; SQL database&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// AddLogToSQLDatabase adds a log into the SQL database&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;AddLogToSQLDatabase&lt;/span&gt;(l &lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;errorFound &lt;span style=&quot;color: #72737a&quot;&gt;string &lt;/span&gt;= &lt;span style=&quot;color: #6a8759&quot;&gt;&quot;&quot;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;//Connect to SQLDatabase&lt;br&gt;&lt;/span&gt;stmt&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := DBCon.&lt;span style=&quot;color: #b09d79&quot;&gt;Prepare&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;`INSERT INTO logs (lType,lDate,lTime,lMemo,lEntity)                     &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;   VALUES (&quot;` &lt;/span&gt;+&lt;br&gt;   l.Type + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;,&quot;` &lt;/span&gt;+&lt;br&gt;   l.Date.&lt;span style=&quot;color: #b09d79&quot;&gt;Format&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;2006-01-02&quot;&lt;/span&gt;) + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;,&quot;` &lt;/span&gt;+&lt;br&gt;   l.Date.&lt;span style=&quot;color: #b09d79&quot;&gt;Format&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;03:04:05&quot;&lt;/span&gt;) + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;,&quot;` &lt;/span&gt;+&lt;br&gt;   l.Memo + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;,&quot;` &lt;/span&gt;+&lt;br&gt;   &lt;span style=&quot;color: #afbf7e&quot;&gt;security&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;CreateSecurityCode&lt;/span&gt;(l.Entity&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;[]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(HPass)) + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;);`&lt;/span&gt;)&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;   errorFound = err.&lt;span style=&quot;color: #c7773e&quot;&gt;Error&lt;/span&gt;()&lt;br&gt;}&lt;br&gt;&lt;span style=&quot;color: #787878&quot;&gt;// Execute the statement&lt;br&gt;&lt;/span&gt;r&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := stmt.&lt;span style=&quot;color: #b09d79&quot;&gt;Exec&lt;/span&gt;()&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;   errorFound = err.&lt;span style=&quot;color: #c7773e&quot;&gt;Error&lt;/span&gt;()&lt;br&gt;}&lt;br&gt;&lt;span style=&quot;color: #787878&quot;&gt;// Check that rows were affected&lt;br&gt;&lt;/span&gt;n&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := r.&lt;span style=&quot;color: #b09d79&quot;&gt;RowsAffected&lt;/span&gt;()&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Need to log any errors&lt;br&gt;&lt;/span&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;errorFound != &lt;span style=&quot;color: #6a8759&quot;&gt;&quot;&quot;&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(errorFound)&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;fmt&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Println&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Number of logs added - rows affected: &quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;n)&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return nil&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=10;" parent="1" vertex="1">
          <mxGeometry x="30" y="-160" width="730" height="640" as="geometry" />
        </mxCell>
        <mxCell id="ufBeylbA63SAaLsGzbN_-3" value="&lt;div&gt;SQL POLL LOGS BY DATE&lt;br&gt;&lt;/div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;SQLPollLogsByDate&lt;/span&gt;(ti &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Time&lt;/span&gt;) ([]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;)&lt;/pre&gt;&lt;div&gt;-- Requests all of the logs of a specific type based on their duration inside of the logs database&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// SQLPollLogsByDateType requests logs from the SQL database based on an input&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// specifying the amount of minutes in the past to pull from&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;SQLPollLogsByDate&lt;/span&gt;(ti &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Time&lt;/span&gt;) ([]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;){&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Get all the logs from the SQL database&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;rows&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := DBCon.&lt;span style=&quot;color: #b09d79&quot;&gt;Query&lt;/span&gt;(&lt;br&gt;      &lt;span style=&quot;color: #6a8759&quot;&gt;`SELECT lEntity,lType,lDate,lTime,lMemo FROM logs WHERE CAST(lDate AS DATE)=&quot;` &lt;/span&gt;+               &lt;br&gt;      ti.&lt;span style=&quot;color: #b09d79&quot;&gt;Format&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;2006-01-02&quot;&lt;/span&gt;) + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;;`&lt;/span&gt;)&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;[]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{}}&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err&lt;br&gt;   }&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Variables to hold the output from the scan&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;iType  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iDate  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iTime  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iMemo  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iEntity &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;SQLlogs []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// Scan through results and output data&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;for &lt;/span&gt;rows.&lt;span style=&quot;color: #b09d79&quot;&gt;Next&lt;/span&gt;(){&lt;br&gt;      rows.&lt;span style=&quot;color: #b09d79&quot;&gt;Scan&lt;/span&gt;(&amp;amp;iEntity&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iType&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iDate&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iTime&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iMemo)&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Convert the date to a time format&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;t&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;_ := &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Parse&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;2006-01-02 03:04:05&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;iDate + &lt;span style=&quot;color: #6a8759&quot;&gt;&quot; &quot; &lt;/span&gt;+ iTime)&lt;br&gt;      SQLlogs = &lt;span style=&quot;color: #c7773e&quot;&gt;append&lt;/span&gt;(SQLlogs&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{iEntity&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;/span&gt;iType&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;/span&gt;t&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;iMemo })&lt;br&gt;   }&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Check if there were no logs&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;SQLlogs == &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;|| &lt;span style=&quot;color: #c7773e&quot;&gt;len&lt;/span&gt;(SQLlogs) &amp;lt; &lt;span style=&quot;color: #6897bb&quot;&gt;1 &lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;[]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{}}&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;No Logs Exist in this date&quot;&lt;/span&gt;)&lt;br&gt;   }&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Return all of the found logs that match the given time span&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;SQLlogs&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=10;" parent="1" vertex="1">
          <mxGeometry x="30" y="510" width="730" height="650" as="geometry" />
        </mxCell>
        <mxCell id="ufBeylbA63SAaLsGzbN_-4" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;br&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// OpenLogsDatabaseSQLConnection connects to the logs database for allowing retrieval and&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// writing to the SQL &#39;logs&#39; database&lt;br&gt;&lt;/span&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;OpenLogsDatabaseSQLConnection&lt;/span&gt;() *&lt;span style=&quot;color: #afbf7e&quot;&gt;sql&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;DB&lt;/span&gt;{&lt;br&gt;   db&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;SQLerr := &lt;span style=&quot;color: #afbf7e&quot;&gt;sql&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Open&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;&lt;br&gt;                     &quot;airpark1_rell:Gotens85@tcp(192.254.224.173:3306)/airpark1_break?charset=utf8&quot;&lt;/span&gt;)&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;SQLerr != &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #afbf7e&quot;&gt;log&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Fatalln&lt;/span&gt;(SQLerr)&lt;br&gt;   }&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;db&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=10;" parent="1" vertex="1">
          <mxGeometry x="30" y="1870" width="730" height="230" as="geometry" />
        </mxCell>
        <mxCell id="f5l4dXjedvk08H-3zB6K-1" value="&lt;div&gt;SQL POLL LOGS BY USER&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;SQLPollLogsByUser&lt;/span&gt;(user &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;/span&gt;) ([]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Query all of the logs for a user using GetSecurityCode( email, &quot; hashPW&quot; )&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// SQLPollLogsByUser queries logs for a specific user from the database&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;SQLPollLogsByUser&lt;/span&gt;(user &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;/span&gt;) ([]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;){&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Query all of the logs from a specific user&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;rows&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := DBCon.&lt;span style=&quot;color: #b09d79&quot;&gt;Query&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;`SELECT lEntity,lType,lDate,lTime,lMemo FROM logs WHERE lEntity=&quot;` &lt;/span&gt;+     &lt;br&gt;                            user + &lt;span style=&quot;color: #6a8759&quot;&gt;`&quot;;`&lt;/span&gt;)&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;[]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{}}&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err&lt;br&gt;   }&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Variables to hold the output from the scan&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;iType  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iDate  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iTime  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iMemo  &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;iEntity &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   var &lt;/span&gt;SQLlogs []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// Scan through results and output data&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;for &lt;/span&gt;rows.&lt;span style=&quot;color: #b09d79&quot;&gt;Next&lt;/span&gt;(){&lt;br&gt;      rows.&lt;span style=&quot;color: #b09d79&quot;&gt;Scan&lt;/span&gt;(&amp;amp;iEntity&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iType&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iDate&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iTime&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;iMemo)&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Convert the date to a time format&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;t&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;_ := &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Parse&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;2006-01-02 03:04:05&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;iDate + &lt;span style=&quot;color: #6a8759&quot;&gt;&quot; &quot; &lt;/span&gt;+ iTime)&lt;br&gt;      SQLlogs = &lt;span style=&quot;color: #c7773e&quot;&gt;append&lt;/span&gt;(SQLlogs&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{iEntity&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;/span&gt;iType&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;/span&gt;t&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;iMemo })&lt;br&gt;   }&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Check if there were no logs&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;SQLlogs == &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;[]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{}}&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;No Logs Exist in this date&quot;&lt;/span&gt;)&lt;br&gt;   }&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Return all of the found logs that match the given time span&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;SQLlogs&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=10;" vertex="1" parent="1">
          <mxGeometry x="30" y="1190" width="730" height="650" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
