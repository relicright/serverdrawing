<mxfile host="app.diagrams.net" modified="2020-04-24T17:12:05.809Z" agent="5.0 (Windows)" etag="Zb85hBq6oWs_f12lM3CA" version="12.9.8" type="github">
  <diagram id="jYejewZL4RnewdmWwtDY" name="Page-1">
    <mxGraphModel dx="876" dy="755" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="s8IivAvc6s-XAy5n7E5O-6" value="&lt;div&gt;&amp;nbsp;&amp;nbsp; Log Functions&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;labelPosition=center;verticalLabelPosition=middle;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="40" y="20" width="750" height="3120" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-7" value="&lt;div&gt;ADD LOG TO DATABASE&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;func AddLogToDatabase(l Log) error { }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Adds a log into the &#39;LogDatabase&#39; bucket&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// AddLogToDatabase() adds a created log into the &#39;LogDatabase&#39; bucket&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;AddLogToDatabase&lt;/span&gt;(l &lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;logs []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;//Check if the logs exists&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;LogsDatabase.&lt;span style=&quot;color: #b09d79&quot;&gt;Update&lt;/span&gt;(&lt;span style=&quot;color: #c7773e&quot;&gt;func&lt;/span&gt;(tx *&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Tx&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;{&lt;br&gt;      b := tx.&lt;span style=&quot;color: #b09d79&quot;&gt;Bucket&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;LogDatabase&quot;&lt;/span&gt;))&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;b == &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;         &lt;span style=&quot;color: #787878&quot;&gt;//No bucket found - return error&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Bucket Not Found: LogDatabase&quot;&lt;/span&gt;)&lt;br&gt;      }&lt;br&gt;&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Convert the users email address into a security code&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;s := &lt;span style=&quot;color: #afbf7e&quot;&gt;security&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;CreateSecurityCode&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(l.Entity))&lt;br&gt;&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Pull all of the logs for the user to append this new log to&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;logs = &lt;span style=&quot;color: #b09d79&quot;&gt;PollUserLogs&lt;/span&gt;(s)&lt;br&gt;      logs = &lt;span style=&quot;color: #c7773e&quot;&gt;append&lt;/span&gt;(logs&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;l)&lt;br&gt;&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Marshal the log into a []byte&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;buff&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := &lt;span style=&quot;color: #afbf7e&quot;&gt;json&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Marshal&lt;/span&gt;(logs)&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;         &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;err&lt;br&gt;      }&lt;span style=&quot;color: #c7773e&quot;&gt;else&lt;/span&gt;{&lt;br&gt;         err1 := b.&lt;span style=&quot;color: #b09d79&quot;&gt;Put&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(s)&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;buff)&lt;br&gt;         &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err1 != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: #b09d79&quot;&gt;AddLogToDatabase&lt;/span&gt;(&lt;span style=&quot;color: #b09d79&quot;&gt;CreateLog&lt;/span&gt;(l.Entity&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Error&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Couldn&#39;t Put Log into DB&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Now&lt;/span&gt;()))&lt;br&gt;            &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;utilities&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;CheckBasicError&lt;/span&gt;(err1)&lt;br&gt;         }&lt;span style=&quot;color: #c7773e&quot;&gt;else&lt;/span&gt;{&lt;br&gt;            &lt;span style=&quot;color: #c7773e&quot;&gt;return nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;         &lt;/span&gt;}&lt;br&gt;      }&lt;br&gt;   })&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#006600;strokeColor=#82b366;verticalAlign=top;spacingLeft=7;" parent="1" vertex="1">
          <mxGeometry x="52" y="60" width="720" height="640" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-10" value="&lt;div&gt;POLL USER LOGS&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;func PollUserLogs (usr string) [ ] Log { }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Polls all of the logs for a specific user using GetSecurityCode( [ ]byte(mail) )&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// PollUserLogs calls for the logs of a specific user by using their&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// GetSecurityCode(email) as the key to their bucket location&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;PollUserLogs&lt;/span&gt;(usr &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;/span&gt;) []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;log []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;   &lt;/span&gt;err := LogsDatabase.&lt;span style=&quot;color: #b09d79&quot;&gt;View&lt;/span&gt;(&lt;span style=&quot;color: #c7773e&quot;&gt;func&lt;/span&gt;(tx *&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Tx&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error &lt;/span&gt;{&lt;br&gt;&lt;br&gt;      b := tx.&lt;span style=&quot;color: #b09d79&quot;&gt;Bucket&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;LogDatabase&quot;&lt;/span&gt;))&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;b == &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;         &lt;span style=&quot;color: #787878&quot;&gt;// Store the error in logs&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Bucket not found: Logs&quot;&lt;/span&gt;)&lt;br&gt;      }&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Store the cursor position&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;c := b.&lt;span style=&quot;color: #b09d79&quot;&gt;Cursor&lt;/span&gt;()&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Range over bucket items&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;prefix := []&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(usr)&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;for &lt;/span&gt;k&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;v := c.&lt;span style=&quot;color: #b09d79&quot;&gt;Seek&lt;/span&gt;(prefix)&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;k != &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;&amp;amp;&amp;amp; &lt;span style=&quot;color: #afbf7e&quot;&gt;bytes&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;HasPrefix&lt;/span&gt;(k&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;prefix)&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;k&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;v = c.&lt;span style=&quot;color: #b09d79&quot;&gt;Next&lt;/span&gt;() {       &lt;br&gt;         &lt;span style=&quot;color: #787878&quot;&gt;// Unmarshall the []byte data into the []Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;json&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Unmarshal&lt;/span&gt;(v&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;log)&lt;br&gt;      }&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   &lt;/span&gt;})&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// Log the error polling users&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;err != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;{&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;go &lt;/span&gt;&lt;span style=&quot;color: #b09d79&quot;&gt;AddLogToDatabase&lt;/span&gt;(&lt;span style=&quot;color: #b09d79&quot;&gt;CreateLog&lt;/span&gt;(&lt;br&gt;         &lt;span style=&quot;color: #6a8759&quot;&gt;&quot;System&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;BucketError&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;         &lt;/span&gt;err.&lt;span style=&quot;color: #c7773e&quot;&gt;Error&lt;/span&gt;()&lt;span style=&quot;color: #cc7832&quot;&gt;,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Now&lt;/span&gt;()))&lt;br&gt;   }&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;log&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=9;" parent="1" vertex="1">
          <mxGeometry x="52" y="722" width="720" height="640" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-12" value="&lt;div&gt;POLL USER LOGS&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;func PollUserLogs (usr string) [ ] Log { }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;-- Polls all of the logs for a specific user using GetSecurityCode( [ ]byte(mail) )&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// PollAllLogs() returns all of the logs in the LogDatabase bucket                                 &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;PollAllLogs&lt;/span&gt;() ([][]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;) {&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;log [][]&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;   &lt;/span&gt;err := LogsDatabase.&lt;span style=&quot;color: #b09d79&quot;&gt;View&lt;/span&gt;(&lt;span style=&quot;color: #c7773e&quot;&gt;func&lt;/span&gt;(tx *&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Tx&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error &lt;/span&gt;{&lt;br&gt;      b := tx.&lt;span style=&quot;color: #b09d79&quot;&gt;Bucket&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;LogDatabase&quot;&lt;/span&gt;))&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;if &lt;/span&gt;b == &lt;span style=&quot;color: #c7773e&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;         &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;errors&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;New&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;Bucket not found: Log&quot;&lt;/span&gt;)&lt;br&gt;      }&lt;br&gt;      &lt;span style=&quot;color: #787878&quot;&gt;// Store the cursor position&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;      &lt;/span&gt;c := b.&lt;span style=&quot;color: #b09d79&quot;&gt;Cursor&lt;/span&gt;()&lt;br&gt;&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;for &lt;/span&gt;k&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;v := c.&lt;span style=&quot;color: #b09d79&quot;&gt;First&lt;/span&gt;()&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;k != &lt;span style=&quot;color: #c7773e&quot;&gt;nil&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;k&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;v = c.&lt;span style=&quot;color: #b09d79&quot;&gt;Next&lt;/span&gt;() {&lt;br&gt;         &lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;pollLogs []&lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #6fafbd&quot;&gt;         &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;json&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Unmarshal&lt;/span&gt;(v&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;pollLogs)&lt;br&gt;         log = &lt;span style=&quot;color: #c7773e&quot;&gt;append&lt;/span&gt;(log&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;pollLogs)&lt;br&gt;      }&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   &lt;/span&gt;})&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;log&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=6;" parent="1" vertex="1">
          <mxGeometry x="52" y="1390" width="718" height="440" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-13" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// InitializeLogDatabase() opens the logDatabase bucket to be used                               &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;InitializeLogDatabase&lt;/span&gt;(){&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;// OPEN THE LOG DATABASE&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #b09d79&quot;&gt;OpenLogsDatabase&lt;/span&gt;()&lt;br&gt;&lt;br&gt;   &lt;span style=&quot;color: #787878&quot;&gt;/// &lt;/span&gt;&lt;span style=&quot;color: #a8c023 ; font-style: italic&quot;&gt;TODO: REMOVE THIS ONCE TESTING IS COMPLETE&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #a8c023 ; font-style: italic&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;//DeleteLogsBucket()&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #b09d79&quot;&gt;MakeLogsDatabase&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=16;" parent="1" vertex="1">
          <mxGeometry x="52" y="2040" width="718" height="200" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-14" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// MakeLogsDatabase creates the bucket for the logs we will store                                &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;MakeLogsDatabase&lt;/span&gt;() {&lt;br&gt;   LogsDatabase.&lt;span style=&quot;color: #b09d79&quot;&gt;Update&lt;/span&gt;(&lt;span style=&quot;color: #c7773e&quot;&gt;func&lt;/span&gt;(tx *&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Tx&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;{&lt;br&gt;      _&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err := tx.&lt;span style=&quot;color: #b09d79&quot;&gt;CreateBucketIfNotExists&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;LogDatabase&quot;&lt;/span&gt;))&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;utilities&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;CheckFatalError&lt;/span&gt;(err)&lt;br&gt;   })&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;spacingLeft=13;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="52" y="2260" width="718" height="150" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-15" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// OpenLogsDatabase opens the logs.db file that stores all of the&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// saved logs in so it can be edited&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;OpenLogsDatabase&lt;/span&gt;() &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;/span&gt;{&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;var &lt;/span&gt;err &lt;span style=&quot;color: #c7773e&quot;&gt;error&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   &lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// Start connections with all the database files used by boltdb&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;   &lt;/span&gt;LogsDatabase&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;err = &lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;Open&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;logs.db&quot;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #6897bb&quot;&gt;0600&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;&amp;amp;&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Options&lt;/span&gt;{Timeout: &lt;span style=&quot;color: #6897bb&quot;&gt;1 &lt;/span&gt;* &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #9876aa ; font-style: italic&quot;&gt;Second&lt;/span&gt;})       &lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;color: #afbf7e&quot;&gt;utilities&lt;/span&gt;.&lt;span style=&quot;color: #b09d79&quot;&gt;CheckFatalError&lt;/span&gt;(err)&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=11;" parent="1" vertex="1">
          <mxGeometry x="52" y="2430" width="718" height="170" as="geometry" />
        </mxCell>
        <mxCell id="s8IivAvc6s-XAy5n7E5O-16" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// DeleteLogsBucket removes the currently stored items in the bucket                             &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// So we can test with a clean bucket.  This will most likely be&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// rarely used in release since we want to store logs until they&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #787878&quot;&gt;// are uploaded into an SQL database&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;DeleteLogsBucket&lt;/span&gt;(){&lt;br&gt;   LogsDatabase.&lt;span style=&quot;color: #b09d79&quot;&gt;Update&lt;/span&gt;(&lt;span style=&quot;color: #c7773e&quot;&gt;func&lt;/span&gt;(tx *&lt;span style=&quot;color: #afbf7e&quot;&gt;bolt&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Tx&lt;/span&gt;) &lt;span style=&quot;color: #c7773e&quot;&gt;error &lt;/span&gt;{&lt;br&gt;&lt;br&gt;      tx.&lt;span style=&quot;color: #b09d79&quot;&gt;DeleteBucket&lt;/span&gt;([]&lt;span style=&quot;color: #c7773e&quot;&gt;byte&lt;/span&gt;(&lt;span style=&quot;color: #6a8759&quot;&gt;&quot;LogDatabase&quot;&lt;/span&gt;))&lt;br&gt;      &lt;span style=&quot;color: #c7773e&quot;&gt;return nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;   &lt;/span&gt;})&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=10;" parent="1" vertex="1">
          <mxGeometry x="52" y="2620" width="718" height="210" as="geometry" />
        </mxCell>
        <mxCell id="8N0BhKov7SJGDSCoA5QO-1" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;#34;consolas&amp;#34; ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #787878&quot;&gt;// CreateLog() returns a log filled with the passed in information&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #c7773e&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: #e6b163&quot;&gt;CreateLog&lt;/span&gt;(entity&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;logType&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;memo &lt;span style=&quot;color: #c7773e&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;, &lt;/span&gt;date &lt;span style=&quot;color: #afbf7e&quot;&gt;time&lt;/span&gt;.&lt;span style=&quot;color: #6fafbd&quot;&gt;Time&lt;/span&gt;) (l &lt;span style=&quot;color: #6fafbd&quot;&gt;Log&lt;/span&gt;){                             &lt;br&gt;   l.Entity = entity&lt;br&gt;   l.Type = logType&lt;br&gt;   l.Memo = memo&lt;br&gt;   l.Date = date&lt;br&gt;   &lt;span style=&quot;color: #c7773e&quot;&gt;return &lt;/span&gt;l&lt;br&gt;}&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#006600;align=left;verticalAlign=top;spacingLeft=16;" vertex="1" parent="1">
          <mxGeometry x="53" y="1849" width="718" height="170" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
